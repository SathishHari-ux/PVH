<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.13.2 on win32)" generated="20250307 13:10:02.323" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\Replay\PVH\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250307 13:10:03.558" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20250307 13:10:03.558" endtime="20250307 13:10:03.558"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250307 13:10:03.559" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20250307 13:10:03.559" endtime="20250307 13:10:03.559"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250307 13:10:03.559" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20250307 13:10:03.559" endtime="20250307 13:10:03.560"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20250307 13:10:03.561" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20250307 13:10:03.562" level="INFO" html="true">Created directory '&lt;a href="file://C:\Replay\PVH\Output\5983937e-fb35-4381-9fb1-b5ce3134b9dd\pabot_results\0\Screenshot"&gt;C:\Replay\PVH\Output\5983937e-fb35-4381-9fb1-b5ce3134b9dd\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250307 13:10:03.560" endtime="20250307 13:10:03.562"/>
</kw>
<status status="PASS" starttime="20250307 13:10:03.560" endtime="20250307 13:10:03.562"/>
</kw>
<status status="PASS" starttime="20250307 13:10:03.558" endtime="20250307 13:10:03.562"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250307 13:10:03.563" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20250307 13:10:03.563" endtime="20250307 13:10:03.563"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20250307 13:10:03.564" endtime="20250307 13:10:03.564"/>
</kw>
<msg timestamp="20250307 13:10:03.564" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20250307 13:10:03.563" endtime="20250307 13:10:03.564"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20250307 13:10:07.909" level="INFO">&amp;{browser_information} = { browser_version=134.0.6998.36 | driver_version=134.0.6998.35  }</msg>
<status status="PASS" starttime="20250307 13:10:03.565" endtime="20250307 13:10:07.909"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250307 13:10:07.910" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20250307 13:10:07.909" endtime="20250307 13:10:07.910"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250307 13:10:07.911" level="INFO">Set suite metadata 'test_browser_version' to value '134.0.6998.36'.</msg>
<status status="PASS" starttime="20250307 13:10:07.910" endtime="20250307 13:10:07.911"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250307 13:10:07.912" level="INFO">Set suite metadata 'test_driver_version' to value '134.0.6998.35 '.</msg>
<status status="PASS" starttime="20250307 13:10:07.911" endtime="20250307 13:10:07.912"/>
</kw>
<status status="PASS" starttime="20250307 13:10:03.565" endtime="20250307 13:10:07.912"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250307 13:10:07.913" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20250307 13:10:07.912" endtime="20250307 13:10:07.913"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20250307 13:10:07.914" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20250307 13:10:07.914" endtime="20250307 13:10:07.914"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250307 13:10:07.915" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20250307 13:10:07.915" endtime="20250307 13:10:07.915"/>
</kw>
<msg timestamp="20250307 13:10:07.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250307 13:10:07.914" endtime="20250307 13:10:07.915"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20250307 13:10:07.915" endtime="20250307 13:10:07.915"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250307 13:10:07.915" endtime="20250307 13:10:07.916"/>
</kw>
<status status="PASS" starttime="20250307 13:10:07.912" endtime="20250307 13:10:07.916"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20250307 13:10:07.919" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20250307 13:10:07.917" endtime="20250307 13:10:07.919"/>
</kw>
<msg timestamp="20250307 13:10:07.919" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20250307 13:10:07.917" endtime="20250307 13:10:07.919"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20250307 13:10:07.919" level="INFO">Length is 1</msg>
<msg timestamp="20250307 13:10:07.919" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20250307 13:10:07.919" endtime="20250307 13:10:07.919"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250307 13:10:07.920" endtime="20250307 13:10:07.920"/>
</kw>
<msg timestamp="20250307 13:10:07.920" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20250307 13:10:07.920" endtime="20250307 13:10:07.920"/>
</kw>
<msg timestamp="20250307 13:10:07.921" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20250307 13:10:07.916" endtime="20250307 13:10:07.921"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250307 13:10:07.921" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000288C630CA50&gt;</msg>
<status status="PASS" starttime="20250307 13:10:07.921" endtime="20250307 13:10:07.921"/>
</kw>
<msg timestamp="20250307 13:10:07.921" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000288C630CA50&gt;</msg>
<status status="PASS" starttime="20250307 13:10:07.921" endtime="20250307 13:10:07.922"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250307 13:10:07.922" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20250307 13:10:07.922" endtime="20250307 13:10:07.922"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250307 13:10:07.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250307 13:10:07.922" endtime="20250307 13:10:07.923"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20250307 13:10:07.923" endtime="20250307 13:10:07.923"/>
</kw>
<status status="NOT RUN" starttime="20250307 13:10:07.923" endtime="20250307 13:10:07.923"/>
</iter>
<status status="NOT RUN" starttime="20250307 13:10:07.923" endtime="20250307 13:10:07.924"/>
</for>
<status status="PASS" starttime="20250307 13:10:07.922" endtime="20250307 13:10:07.924"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20250307 13:10:07.924" endtime="20250307 13:10:07.924"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250307 13:10:07.925" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000288C630CA50&gt;</msg>
<status status="PASS" starttime="20250307 13:10:07.924" endtime="20250307 13:10:07.925"/>
</kw>
<status status="PASS" starttime="20250307 13:10:07.916" endtime="20250307 13:10:07.925"/>
</kw>
<status status="PASS" starttime="20250307 13:10:03.565" endtime="20250307 13:10:07.925"/>
</kw>
<status status="PASS" starttime="20250307 13:10:03.564" endtime="20250307 13:10:07.925"/>
</kw>
<status status="PASS" starttime="20250307 13:10:03.563" endtime="20250307 13:10:07.925"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250307 13:10:07.925" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20250307 13:10:07.925" endtime="20250307 13:10:07.926"/>
</kw>
<status status="PASS" starttime="20250307 13:10:03.557" endtime="20250307 13:10:07.926"/>
</kw>
<suite id="s1-s1" name="Test PVH-st06" source="C:\Replay\PVH\Tests\Test_PVH-st06.robot">
<kw name="System Logon" library="PVH-st06" type="SETUP">
<kw name="Start Process" library="Process">
<arg>${symvar('SAP_SERVER')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20250307 13:10:07.945" level="INFO">Sym.Dev.SAP_SERVER: C:\Program Files (x86)\SAP\FrontEnd\SAPGUI\saplogon.exe</msg>
<msg timestamp="20250307 13:10:07.945" level="INFO">Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPGUI\saplogon.exe"</msg>
<status status="PASS" starttime="20250307 13:10:07.944" endtime="20250307 13:10:07.955"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250307 13:10:17.956" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20250307 13:10:07.955" endtime="20250307 13:10:17.956"/>
</kw>
<kw name="Connect To Session" library="SAP_Tcode_Library">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20250307 13:10:17.956" endtime="20250307 13:10:17.979"/>
</kw>
<kw name="Open Connection" library="SAP_Tcode_Library">
<arg>${symvar('PVH_connection')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20250307 13:10:17.980" level="INFO">Sym.Dev.PVH_connection: PFD</msg>
<status status="PASS" starttime="20250307 13:10:17.979" endtime="20250307 13:10:18.650"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('PVH_Client_Id')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250307 13:10:18.651" level="INFO">Sym.Dev.PVH_Client_Id: 000</msg>
<msg timestamp="20250307 13:10:18.695" level="INFO">Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20250307 13:10:18.650" endtime="20250307 13:10:18.695"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('PVH_User_Name')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250307 13:10:18.696" level="INFO">Sym.Dev.PVH_User_Name: DDIC</msg>
<msg timestamp="20250307 13:10:18.711" level="INFO">Typing text 'DDIC' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20250307 13:10:18.696" endtime="20250307 13:10:18.711"/>
</kw>
<kw name="Input Password" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>%{PVH_User_Password}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20250307 13:10:18.719" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20250307 13:10:18.712" endtime="20250307 13:10:18.719"/>
</kw>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20250307 13:10:18.719" endtime="20250307 13:10:19.848"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250307 13:10:22.850" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20250307 13:10:19.849" endtime="20250307 13:10:22.850"/>
</kw>
<kw name="Multiple Logon Handling" library="SAP_Tcode_Library">
<arg>wnd[1]</arg>
<arg>wnd[1]/usr/radMULTI_LOGON_OPT2</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<status status="PASS" starttime="20250307 13:10:22.850" endtime="20250307 13:10:22.853"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250307 13:10:27.854" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20250307 13:10:22.854" endtime="20250307 13:10:27.854"/>
</kw>
<status status="PASS" starttime="20250307 13:10:07.944" endtime="20250307 13:10:27.855"/>
</kw>
<test id="s1-s1-t1" name="PVH-st06" line="8">
<kw name="PVH-st06" library="PVH-st06">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nst06</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20250307 13:10:27.856" endtime="20250307 13:10:29.839"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250307 13:10:30.840" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250307 13:10:29.839" endtime="20250307 13:10:30.840"/>
</kw>
<kw name="Select Node" library="SAP_Tcode_Library">
<arg>wnd[0]/shellcont/shellcont/shell/shellcont[0]/shellcont/shell/shellcont[1]/shell</arg>
<arg>${SPACE*9}31</arg>
<doc>Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.</doc>
<status status="PASS" starttime="20250307 13:10:30.840" endtime="20250307 13:10:31.238"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250307 13:10:33.239" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250307 13:10:31.238" endtime="20250307 13:10:33.240"/>
</kw>
<kw name="Take Screenshot" library="SAP_Tcode_Library">
<arg>001_st06_01.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20250307 13:10:33.329" level="INFO" html="true">&lt;a href="001_st06_01.jpg"&gt;&lt;img src="001_st06_01.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20250307 13:10:33.240" endtime="20250307 13:10:33.329"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250307 13:10:34.330" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250307 13:10:33.330" endtime="20250307 13:10:34.331"/>
</kw>
<kw name="Copy Images" library="Merger">
<arg>${OUTPUT_DIR}</arg>
<arg>${symvar('PVH_Target_Dir')}</arg>
<msg timestamp="20250307 13:10:34.332" level="INFO">Sym.Dev.PVH_Target_Dir: C:\tmp\PVH\Pre\</msg>
<msg timestamp="20250307 13:10:34.561" level="INFO">Copied: 001_st06_01.jpg
Skipped: Output.xml - Not a valid image file or format not supported. Error: cannot identify image file 'C:\\Replay\\PVH\\Output\\5983937e-fb35-4381-9fb1-b5ce3134b9dd\\pabot_results\\0\\Output.xml'
Skipped: robot_stderr.out - Not a valid image file or format not supported. Error: cannot identify image file 'C:\\Replay\\PVH\\Output\\5983937e-fb35-4381-9fb1-b5ce3134b9dd\\pabot_results\\0\\robot_stderr.out'
Skipped: robot_stdout.out - Not a valid image file or format not supported. Error: cannot identify image file 'C:\\Replay\\PVH\\Output\\5983937e-fb35-4381-9fb1-b5ce3134b9dd\\pabot_results\\0\\robot_stdout.out'</msg>
<status status="PASS" starttime="20250307 13:10:34.331" endtime="20250307 13:10:34.561"/>
</kw>
<status status="PASS" starttime="20250307 13:10:27.855" endtime="20250307 13:10:34.561"/>
</kw>
<tag>pvh-st06</tag>
<tag>Regression</tag>
<status status="PASS" starttime="20250307 13:10:27.855" endtime="20250307 13:10:34.561"/>
</test>
<kw name="System Logout" library="PVH-st06" type="TEARDOWN">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nex</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20250307 13:10:34.563" endtime="20250307 13:10:34.598"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250307 13:10:39.599" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20250307 13:10:34.598" endtime="20250307 13:10:39.599"/>
</kw>
<status status="PASS" starttime="20250307 13:10:34.563" endtime="20250307 13:10:39.599"/>
</kw>
<status status="PASS" starttime="20250307 13:10:07.926" endtime="20250307 13:10:39.600"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">134.0.6998.36</meta>
<meta name="test_driver_version">134.0.6998.35 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.3.8,attrs==25.1.0,beautifulsoup4==4.13.3,bs4==0.0.2,certifi==2025.1.31,cffi==1.17.1,chardet==5.2.0,charset-normalizer==3.4.1,click==8.1.8,colorama==0.4.6,cryptography==44.0.2,defusedxml==0.7.1,dill==0.3.9,docutils==0.21.2,et_xmlfile==2.0.0,exceptiongroup==1.2.2,gitdb==4.0.12,GitPython==3.1.44,h11==0.14.0,idna==3.10,isort==6.0.1,Jinja2==3.1.5,jira==3.8.0,jsonpath-ng==1.7.0,jsonschema==4.23.0,jsonschema-specifications==2024.10.1,lazy-object-proxy==1.10.0,lxml==5.3.1,markdown-it-py==3.0.0,MarkupSafe==3.0.2,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,openpyxl==3.1.5,outcome==1.3.0.post0,packaging==24.2,pathspec==0.11.2,pillow==11.1.0,pip==25.0.1,platformdirs==4.3.6,ply==3.11,pycparser==2.22,Pygments==2.19.1,pylint==3.3.4,PySocks==1.7.1,pywin32==308,PyYAML==6.0.2,referencing==0.36.2,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.9.4,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.23.1,selenium==4.9.1,setuptools==75.8.2,smmap==5.0.2,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.6,tomli==2.0.2,tomlkit==0.13.2,trio==0.29.0,trio-websocket==0.12.2,typing_extensions==4.12.2,urllib3==2.3.0,wheel==0.45.1,wrapt==1.17.2,wsproto==1.2.0</meta>
<status status="PASS" starttime="20250307 13:10:03.142" endtime="20250307 13:10:39.711"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">pvh-st06</stat>
<stat pass="1" fail="0" skip="0">Regression</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test PVH-st06">Tests.Test PVH-st06</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
